spring:
  datasource:
    url: jdbc:mysql://localhost:3306/content_center
    hikari:
      username: root
      password: root
      # >= 6.x: com.mysql.cj.jdbc.Driver
      # <= 5.x: com.mysql.jdbc.Driver
      driver-class-name: com.mysql.cj.jdbc.Driver
  cloud:
    nacos:
      discovery:
        server-addr: localhost:8848
        cluster-name: BJ
        namespace: 71025227-1403-4d88-bce2-5cc8a04c1817
    sentinel:
      filter:
        # 打开/关闭掉对Spring MVC端点的保护
        enabled: false
      transport:
        # 指定sentinel 控制台的地址
        dashboard: localhost:8080
  application:
    name: content-center
# 如果一个服务名称同时在多个feign中声明，需指定下面配置,否则报错
  main:
    allow-bean-definition-overriding: true
server:
  port: 8081

# 通过yml配置ribbon规则
user-center:
  ribbon:
#    NFloadBalancerRulelassName: com.netflix.loadbalancer.RandomRule
    NFloadBalancerRulelassName: com.netflix.loadbalancer.RoundRobinRule
ribbon:
  eager-load:
#    开启饥饿加载， ribbon默认是懒加载，会导致第一次调用服务很慢。
    enabled: true
#    指定服务名称 ,号分割
    clients: user-center
# 基于java代码配置feign
logging:
  level:
    com.itmuch.contentcenter.feignclient.UserCenterFeignClient: debug
#    com.itmuch.contentcenter.configuration.GlobalFeignConfiguration: debug
feign:
  sentinel:
#     为feign整合sentinel
    enabled: true
#feign:
#  client:
#    config:
      # 想要调用微服务的名称
#      user-center:
#        loggerLevel: full
#       全局配置
#      default:
#        loggerLevel: full
  #
  httpclient:
    # 让feign使用apache httpclient做请求；而不是默认的urlconnection
    # 使用OKHTTP 同理
    enabled:
    # 下面这两个值，生厂上需通过压测的结果而定。
    # feign的最大连接数
    max-connections: 200
    # feign单个路径的最大连接数
    max-connections-per-route: 50
#        requestInterceptors:
#          - com.itmuch.contruetentcenter.feignclient.interceptor.TokenRelayRequestIntecepor
# 暴露 actuator/sentinel
management:
  endpoints:
    web:
      exposure:
        include: '*'
resttemplate:
  sentinel:
    # 设置成false，表示关闭@SentinelRestTemplate注解
    enabled: true